BROKER SCHEMA mqsi

/**
 * Copyright (c) 2014 IBM Corporation and other Contributors
 *
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     IBM - initial implementation
**/

DECLARE ErrorLoggingOn EXTERNAL BOOLEAN TRUE;
DECLARE RequestLoggingOn EXTERNAL BOOLEAN TRUE;
DECLARE ResponseLoggingOn EXTERNAL BOOLEAN TRUE;

-- This uses a database node as it is (currently) the most
-- efficient way of making changes to the local environment
CREATE DATABASE MODULE SynchRR_Initialise
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		SET Environment.PatternVariables.StatusCode = 0;
		DECLARE EVRef REFERENCE TO Environment.PatternVariables;
		SET EVRef.RRMode = 'Request';
		-- Set the broker queue manager here to save a compute node later
		SET EVRef.BrokerQueueManager = SQL.QueueManagerName;
		SET EVRef.SOAPReplyIdentifier = 
			LocalEnvironment.Destination.SOAP.Reply.ReplyIdentifier;
		RETURN TRUE;
	END;
END MODULE;


CREATE COMPUTE MODULE SynchRR_BuildStoreMsg
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
	-- Use same MQMD as for main message 
	-- REPLYTO will be ignored
	Set OutputRoot.MQMD = InputRoot.MQMD; 
	SET OutputRoot.BLOB.BLOB = 	Environment.PatternVariables.SOAPReplyIdentifier;
	-- SET CorrelId to Message ID of message sent to provider
	-- This will be required by the MQGet node, which gets a message using the correlation ID.
	SET OutputRoot.MQMD.CorrelId = InputLocalEnvironment.WrittenDestination.MQ.DestinationData.msgId;
	SET OutputRoot.MQMD.Expiry = MQEI_UNLIMITED; 	
	RETURN TRUE;
	END;
	END MODULE;



CREATE COMPUTE MODULE SynchRR_SetResponseMode
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		SET Environment.PatternVariables.RRMode = 'Response';
		RETURN TRUE;
		END;
END MODULE;

CREATE COMPUTE MODULE SynchRR_RestoreReplyId
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		SET OutputLocalEnvironment.Destination.SOAP.Reply.ReplyIdentifier = InputLocalEnvironment.BLOB.BLOB;
		SET OutputRoot.SOAP.Body = InputRoot.XMLNSC;
		SET OutputRoot.Properties.CodedCharSetId = 1208;
		RETURN TRUE;
		END;
END MODULE;


CREATE COMPUTE MODULE STRIP
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN

/*********************************************************
*  Remove HTTP header and SOAP envelope                  *
**********************************************************/

	SET OutputRoot.Properties = InputRoot.Properties;
	SET OutputRoot.XMLNSC = InputRoot.*:SOAP.*:Body[1];

		RETURN TRUE;
	END;
END MODULE;
	