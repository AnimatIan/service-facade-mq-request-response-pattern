<?xml version="1.0" encoding="UTF-8"?>
<ecore:EPackage xmi:version="2.0"
    xmlns:xmi="http://www.omg.org/XMI" 
    xmlns:ComIbmCompute.msgnode="ComIbmCompute.msgnode" 
    xmlns:ComIbmFlowOrder.msgnode="ComIbmFlowOrder.msgnode" 
    xmlns:ComIbmHTTPHeader.msgnode="ComIbmHTTPHeader.msgnode" 
    xmlns:ComIbmMQHeader.msgnode="ComIbmMQHeader.msgnode" 
    xmlns:ComIbmMQOutput.msgnode="ComIbmMQOutput.msgnode" 
    xmlns:ComIbmSOAPExtract.msgnode="ComIbmSOAPExtract.msgnode" 
    xmlns:ComIbmSOAPInput.msgnode="ComIbmSOAPInput.msgnode"
    xmlns:ComIbmTryCatch.msgnode = "ComIbmTryCatch.msgnode"
    xmlns:ComIbmSOAPReply.msgnode="ComIbmSOAPReply.msgnode"
    xmlns:<c:get select="$root/@brokerSchema1"/><c:get select = "$root/@error"/>.subflow =
    "<c:get select="$root/@brokerSchema2"/><c:get select = "$root/@error"/>.subflow" 

<c:if test="$root/loggingRequired = 'true'"> 
    xmlns:<c:get select="$root/@brokerSchema1"/><c:get select = "$root/@log"/>.subflow =
    "<c:get select="$root/@brokerSchema2"/><c:get select = "$root/@log"/>.subflow" 
</c:if>
    xmlns:<c:get select="$root/@brokerSchema1"/><c:get select = "$root/@requestprocessor"/>.subflow=
    "<c:get select="$root/@brokerSchema2"/><c:get select = "$root/@requestprocessor"/>.subflow" 
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" 
    xmlns:eflow="http://www.ibm.com/wbi/2005/eflow" 
    xmlns:utility="http://www.ibm.com/wbi/2005/eflow_utility" 
    nsURI="<c:get select="$root/@thisFlowURI"/>.msgflow"
    nsPrefix="<c:get select="$root/@thisFlowPrefix"/>.msgflow">
    <eClassifiers xmi:type="eflow:FCMComposite" name="FCMComposite_1">
    <eSuperTypes href="http://www.ibm.com/wbi/2005/eflow#//FCMBlock"/> 
    <c:if test="$root/loggingRequired = 'true'"> 
    <eStructuralFeatures xmi:type="ecore:EAttribute" xmi:id="Property.LoggingOn" name="LoggingOn" 
    lowerBound="1" defaultValueLiteral="true">
    <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
    </eStructuralFeatures>
    </c:if>
    <c:if test="$root/errorMessageRequired = 'true'">
       <eStructuralFeatures xmi:type="ecore:EAttribute" xmi:id="Property.ErrorLoggingOn" name="ErrorLoggingOn" lowerBound="1" defaultValueLiteral="true">
      <eType xmi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
    </eStructuralFeatures> 
    </c:if>
    <translation xmi:type="utility:TranslatableString" 
    key="<c:get select="$root/@request"/>" bundleName="<c:get select="$root/@request"/>" 
    pluginId="<c:get select="$root/@projectname"/>"/>
    <colorGraphic16 xmi:type="utility:GIFFileGraphic" 
    resourceName="platform:/plugin/<c:get select="$root/@projectname"/>/icons/full/obj16/<c:get select="$root/@request"/>.gif"/>
    <colorGraphic32 xmi:type="utility:GIFFileGraphic" 
    resourceName="platform:/plugin/<c:get select="$root/@projectname"/>/icons/full/obj30/<c:get select="$root/@request"/>.gif"/>
	<shortDescription xmi:type="utility:ConstantString" string="<c:get select="$root/shortDescription"/>"/>
    <longDescription xmi:type="utility:ConstantString" 
    string="Generated by <c:get select="$root/@patternName"/> Version <c:get select="$root/@patternVersion"/>
    &#xD;&#xA;<c:get select="$root/longDescription"/>
    &#xD;&#xA;$MQSI patternName=<c:get select="$root/@patternName"/> MQSI$
    &#xD;&#xA;$MQSI patternVersion=<c:get select="$root/@patternVersion"/> MQSI$
    "/>
    <version xmi:type="utility:ConstantString" string="1"/>
    <composition>	
    <nodes xmi:type="ComIbmSOAPReply.msgnode:FCMComposite_1" xmi:id="FCMComposite_1_10" 
    location="711,21" validateMaster="none">
        <translation xmi:type="utility:ConstantString" string="SOAP Reply"/>
    </nodes>
    
    <nodes xmi:type="ComIbmFlowOrder.msgnode:FCMComposite_1" xmi:id="FCMComposite_1_14" location="75,265">
        <translation xmi:type="utility:ConstantString" string="Log after response"/>
    </nodes>
    
    <nodes xmi:type="ComIbmMQOutput.msgnode:FCMComposite_1" xmi:id="FCMComposite_1_5" location="442,191" 
      queueManagerName="<c:get select="$root/providerRequestQueueManager"/>" 
      queueName="<c:get select = "$root/queuePrefix"/><c:get select="$root/providerRequestQueue"/><c:get select = "$root/queueSuffix"/>"  
      transactionMode="no" persistenceMode="yes" validateMaster="none">
        <translation xmi:type="utility:ConstantString" string="Out to Provider"/>
    </nodes>
    
    <nodes xmi:type="ComIbmCompute.msgnode:FCMComposite_1" xmi:id="FCMComposite_1_8" location="527,195" 
       computeExpression="esql://routine/<c:get select="$root/@esqlQualifier"/>Build_SOAP_Reply_Ack.Main">
        <translation xmi:type="utility:ConstantString" string="Build Acknowledgement"/>
    </nodes>
    
    
    <nodes xmi:type="ComIbmTryCatch.msgnode:FCMComposite_1" xmi:id="FCMComposite_1_20" location="142,188">
        <translation xmi:type="utility:ConstantString" string="Catch  before Write"/>
    </nodes>
    
      <nodes xmi:type="ComIbmSOAPInput.msgnode:FCMComposite_1" xmi:id="FCMComposite_1_1" location="26,85" 
      
      <%-- check that all parameters can be extracted from wsdl --%>
   	<c:if test="boolean($root/serviceWsdl/portType)" >
   	<c:if test="string-length($root/serviceWsdl/portType) > 0">
    	<c:if test="boolean($root/serviceWsdl/binding)" >
		<c:if test="string-length($root/serviceWsdl/binding) > 0">
    		 <c:if test="boolean($root/serviceWsdl/service)" >
    		 <c:if test="boolean($root/serviceWsdl/portType)" >
    		   	<c:if test="boolean($root/serviceWsdl/targetNamespace)" >
			 	<c:if test="string-length($root/serviceWsdl/targetNamespace) > 0">
<%-- set up SOAP input only if all parameters are available --%>			 	
      
      
      wsdlFileName = "<c:get select="$root/serviceWsdl/fileName"/>" 
      selectedPortType = "<c:get select="$root/serviceWsdl/portType"/>" 
      selectedBinding = "<c:get select="$root/serviceWsdl/binding"/>" 
      selectedPort = "<c:get select="$root/serviceWsdl/port"/>" 
      targetNamespace = "<c:get select="$root/serviceWsdl/targetNamespace"/>" 
      useHTTPTransport = "true" 
      urlSelector = "/<c:get select="$root/serviceWsdl/service"/>"
      <c:if test="$root/serviceWsdl/isMessageSetProject = 'true'">
      messageSetProperty = "<c:get select="$root/serviceWsdl/messageSetName"/>"
      </c:if>
<c:if test="$root/validationofSOAPRequest = 'None'">
      parserXmlnscBuildTreeUsingXMLSchema="false" validateMaster="none"
</c:if>
</c:if></c:if></c:if></c:if></c:if></c:if></c:if></c:if>
>
        <translation xmi:type="utility:ConstantString" string="SOAP Input"/>
      </nodes>
   
   <c:if test="$root/loggingRequired = 'true'">
      <nodes xmi:type="<c:get select="$root/@brokerSchema1"/><c:get select="$root/@log"/>.subflow:FCMComposite_1" xmi:id="FCMComposite_1_6" 
      location="232,317">
        <translation xmi:type="utility:ConstantString" string="Log"/>
      </nodes>
</c:if>  
   
      <nodes xmi:type="<c:get select="$root/@brokerSchema1"/><c:get select = "$root/@error"/>.subflow:FCMComposite_1" xmi:id="FCMComposite_1_3" location="280,28">
        <translation xmi:type="utility:ConstantString" string="Error"/>
      </nodes>

      <nodes xmi:type="<c:get select="$root/@brokerSchema1"/><c:get select = "$root/@requestprocessor"/>.subflow:FCMComposite_1" xmi:id="FCMComposite_1_7" 
      location="345,193">
        <translation xmi:type="utility:ConstantString" string="Request_Processor"/>
      </nodes>
      
      <nodes xmi:type="ComIbmCompute.msgnode:FCMComposite_1" xmi:id="FCMComposite_1_16" location="274,192" 
      computeExpression="esql://routine/<c:get select="$root/@esqlQualifier"/>STRIP.Main">
        <translation xmi:type="utility:ConstantString" string="Strip to Body"/>
      </nodes>
      <connections xmi:type="eflow:FCMConnection" xmi:id="FCMConnection_8" targetNode="FCMComposite_1_10" sourceNode="FCMComposite_1_8" sourceTerminalName="OutTerminal.out" targetTerminalName="InTerminal.in"/>
      <connections xmi:type="eflow:FCMConnection" xmi:id="FCMConnection_16" targetNode="FCMComposite_1_8" sourceNode="FCMComposite_1_5" sourceTerminalName="OutTerminal.out" targetTerminalName="InTerminal.in"/>
      <connections xmi:type="eflow:FCMConnection" xmi:id="FCMConnection_23" targetNode="FCMComposite_1_20" sourceNode="FCMComposite_1_14" sourceTerminalName="OutTerminal.first" targetTerminalName="InTerminal.in"/>
      <connections xmi:type="eflow:FCMConnection" xmi:id="FCMConnection_1" targetNode="FCMComposite_1_14" sourceNode="FCMComposite_1_1" sourceTerminalName="OutTerminal.out" targetTerminalName="InTerminal.in"/>
<c:if test="$root/loggingRequired = 'true'">
      <connections xmi:type="eflow:FCMConnection" xmi:id="FCMConnection_5" targetNode="FCMComposite_1_6" sourceNode="FCMComposite_1_14" sourceTerminalName="OutTerminal.second" targetTerminalName="InTerminal.Input"/>
</c:if> 
      <connections xmi:type="eflow:FCMConnection" xmi:id="FCMConnection_9" targetNode="FCMComposite_1_5" sourceNode="FCMComposite_1_7" sourceTerminalName="OutTerminal.Output" targetTerminalName="InTerminal.in"/>
      <connections xmi:type="eflow:FCMConnection" xmi:id="FCMConnection_6" targetNode="FCMComposite_1_16" sourceNode="FCMComposite_1_20" sourceTerminalName="OutTerminal.try" targetTerminalName="InTerminal.in"/>
      <connections xmi:type="eflow:FCMConnection" xmi:id="FCMConnection_7" targetNode="FCMComposite_1_7" sourceNode="FCMComposite_1_16" sourceTerminalName="OutTerminal.out" targetTerminalName="InTerminal.Input"/>
      <connections xmi:type="eflow:FCMConnection" xmi:id="FCMConnection_4" targetNode="FCMComposite_1_3" sourceNode="FCMComposite_1_1" sourceTerminalName="OutTerminal.failure" targetTerminalName="InTerminal.Input"/>
      <connections xmi:type="eflow:FCMConnection" xmi:id="FCMConnection_10" targetNode="FCMComposite_1_3" sourceNode="FCMComposite_1_20" sourceTerminalName="OutTerminal.catch" targetTerminalName="InTerminal.Input"/>
</composition>

    <propertyOrganizer>
<c:if test="$root/loggingRequired = 'true'"> 
     <propertyDescriptor groupName="Group.Basic" configurable="true" userDefined="true" describedAttribute="Property.LoggingOn">
          <propertyName xmi:type="utility:TranslatableString" key="Property.LoggingOn" 
          bundleName="<c:get select="$root/@thisFlowBundleName"/>"
          pluginId="<c:get select="$root/@projectname"/>"/>
</c:if>
<c:if test="$root/errorMessageRequired = 'true'">
    <propertyDescriptor groupName="Group.Basic" configurable="true" userDefined="true" describedAttribute="Property.ErrorLoggingOn">
        <propertyName xmi:type="utility:TranslatableString" key="Property.ErrorLoggingOn" 
    		bundleName="<c:get select="$root/@thisFlowBundleName"/>" 
        pluginId="<c:get select="$root/@projectname"/>"/>
      </propertyDescriptor> 
</c:if>
<c:if test="$root/loggingRequired = 'true'">       
     </propertyDescriptor>
</c:if> 
    </propertyOrganizer>
<c:if test="$root/errorMessageRequired = 'true'">
      <attributeLinks promotedAttribute="Property.ErrorLoggingOn" overriddenNodes="FCMComposite_1_7">
      <overriddenAttribute href="<c:get select="$root/@brokerSchema2"/><c:get select="$root/@error"/>.subflow#Property.ErrorLoggingOn"/>
    </attributeLinks>
</c:if>
<c:if test="$root/loggingRequired = 'true'">
      <attributeLinks promotedAttribute="Property.LoggingOn" overriddenNodes="FCMComposite_1_6">
      <overriddenAttribute href="<c:get select="$root/@brokerSchema2"/><c:get select="$root/@log"/>.subflow#Property.LoggingOn"/>
    </attributeLinks>  
</c:if>
  </eClassifiers>
</ecore:EPackage>
